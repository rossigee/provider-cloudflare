//go:build !ignore_autogenerated

/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdaptiveRouting) DeepCopyInto(out *AdaptiveRouting) {
	*out = *in
	if in.FailoverAcrossPools != nil {
		in, out := &in.FailoverAcrossPools, &out.FailoverAcrossPools
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdaptiveRouting.
func (in *AdaptiveRouting) DeepCopy() *AdaptiveRouting {
	if in == nil {
		return nil
	}
	out := new(AdaptiveRouting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancer) DeepCopyInto(out *LoadBalancer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancer.
func (in *LoadBalancer) DeepCopy() *LoadBalancer {
	if in == nil {
		return nil
	}
	out := new(LoadBalancer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerFixedResponse) DeepCopyInto(out *LoadBalancerFixedResponse) {
	*out = *in
	if in.MessageBody != nil {
		in, out := &in.MessageBody, &out.MessageBody
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(int)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerFixedResponse.
func (in *LoadBalancerFixedResponse) DeepCopy() *LoadBalancerFixedResponse {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerFixedResponse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerList) DeepCopyInto(out *LoadBalancerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoadBalancer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerList.
func (in *LoadBalancerList) DeepCopy() *LoadBalancerList {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerLoadShedding) DeepCopyInto(out *LoadBalancerLoadShedding) {
	*out = *in
	if in.DefaultPercent != nil {
		in, out := &in.DefaultPercent, &out.DefaultPercent
		*out = new(string)
		**out = **in
	}
	if in.DefaultPolicy != nil {
		in, out := &in.DefaultPolicy, &out.DefaultPolicy
		*out = new(string)
		**out = **in
	}
	if in.SessionPercent != nil {
		in, out := &in.SessionPercent, &out.SessionPercent
		*out = new(string)
		**out = **in
	}
	if in.SessionPolicy != nil {
		in, out := &in.SessionPolicy, &out.SessionPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerLoadShedding.
func (in *LoadBalancerLoadShedding) DeepCopy() *LoadBalancerLoadShedding {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerLoadShedding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerMonitor) DeepCopyInto(out *LoadBalancerMonitor) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerMonitor.
func (in *LoadBalancerMonitor) DeepCopy() *LoadBalancerMonitor {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerMonitor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerMonitor) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerMonitorList) DeepCopyInto(out *LoadBalancerMonitorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoadBalancerMonitor, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerMonitorList.
func (in *LoadBalancerMonitorList) DeepCopy() *LoadBalancerMonitorList {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerMonitorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerMonitorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerMonitorObservation) DeepCopyInto(out *LoadBalancerMonitorObservation) {
	*out = *in
	if in.CreatedOn != nil {
		in, out := &in.CreatedOn, &out.CreatedOn
		*out = new(string)
		**out = **in
	}
	if in.ModifiedOn != nil {
		in, out := &in.ModifiedOn, &out.ModifiedOn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerMonitorObservation.
func (in *LoadBalancerMonitorObservation) DeepCopy() *LoadBalancerMonitorObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerMonitorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerMonitorParameters) DeepCopyInto(out *LoadBalancerMonitorParameters) {
	*out = *in
	if in.Account != nil {
		in, out := &in.Account, &out.Account
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(int)
		**out = **in
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(int)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(int)
		**out = **in
	}
	if in.ConsecutiveUp != nil {
		in, out := &in.ConsecutiveUp, &out.ConsecutiveUp
		*out = new(int)
		**out = **in
	}
	if in.ConsecutiveDown != nil {
		in, out := &in.ConsecutiveDown, &out.ConsecutiveDown
		*out = new(int)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int)
		**out = **in
	}
	if in.ExpectedBody != nil {
		in, out := &in.ExpectedBody, &out.ExpectedBody
		*out = new(string)
		**out = **in
	}
	if in.ExpectedCodes != nil {
		in, out := &in.ExpectedCodes, &out.ExpectedCodes
		*out = new(string)
		**out = **in
	}
	if in.FollowRedirects != nil {
		in, out := &in.FollowRedirects, &out.FollowRedirects
		*out = new(bool)
		**out = **in
	}
	if in.AllowInsecure != nil {
		in, out := &in.AllowInsecure, &out.AllowInsecure
		*out = new(bool)
		**out = **in
	}
	if in.ProbeZone != nil {
		in, out := &in.ProbeZone, &out.ProbeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerMonitorParameters.
func (in *LoadBalancerMonitorParameters) DeepCopy() *LoadBalancerMonitorParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerMonitorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerMonitorSpec) DeepCopyInto(out *LoadBalancerMonitorSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerMonitorSpec.
func (in *LoadBalancerMonitorSpec) DeepCopy() *LoadBalancerMonitorSpec {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerMonitorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerMonitorStatus) DeepCopyInto(out *LoadBalancerMonitorStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerMonitorStatus.
func (in *LoadBalancerMonitorStatus) DeepCopy() *LoadBalancerMonitorStatus {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerMonitorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerObservation) DeepCopyInto(out *LoadBalancerObservation) {
	*out = *in
	if in.CreatedOn != nil {
		in, out := &in.CreatedOn, &out.CreatedOn
		*out = new(string)
		**out = **in
	}
	if in.ModifiedOn != nil {
		in, out := &in.ModifiedOn, &out.ModifiedOn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerObservation.
func (in *LoadBalancerObservation) DeepCopy() *LoadBalancerObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerOrigin) DeepCopyInto(out *LoadBalancerOrigin) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(string)
		**out = **in
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerOrigin.
func (in *LoadBalancerOrigin) DeepCopy() *LoadBalancerOrigin {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerOrigin)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerOriginSteering) DeepCopyInto(out *LoadBalancerOriginSteering) {
	*out = *in
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerOriginSteering.
func (in *LoadBalancerOriginSteering) DeepCopy() *LoadBalancerOriginSteering {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerOriginSteering)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerParameters) DeepCopyInto(out *LoadBalancerParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(int)
		**out = **in
	}
	if in.FallbackPool != nil {
		in, out := &in.FallbackPool, &out.FallbackPool
		*out = new(string)
		**out = **in
	}
	if in.FallbackPoolRef != nil {
		in, out := &in.FallbackPoolRef, &out.FallbackPoolRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FallbackPoolSelector != nil {
		in, out := &in.FallbackPoolSelector, &out.FallbackPoolSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultPools != nil {
		in, out := &in.DefaultPools, &out.DefaultPools
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DefaultPoolRefs != nil {
		in, out := &in.DefaultPoolRefs, &out.DefaultPoolRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultPoolSelector != nil {
		in, out := &in.DefaultPoolSelector, &out.DefaultPoolSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RegionPools != nil {
		in, out := &in.RegionPools, &out.RegionPools
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.PopPools != nil {
		in, out := &in.PopPools, &out.PopPools
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.CountryPools != nil {
		in, out := &in.CountryPools, &out.CountryPools
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.Proxied != nil {
		in, out := &in.Proxied, &out.Proxied
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinityTTL != nil {
		in, out := &in.SessionAffinityTTL, &out.SessionAffinityTTL
		*out = new(int)
		**out = **in
	}
	if in.SessionAffinityAttributes != nil {
		in, out := &in.SessionAffinityAttributes, &out.SessionAffinityAttributes
		*out = new(SessionAffinityAttributes)
		(*in).DeepCopyInto(*out)
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]LoadBalancerRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RandomSteering != nil {
		in, out := &in.RandomSteering, &out.RandomSteering
		*out = new(RandomSteering)
		(*in).DeepCopyInto(*out)
	}
	if in.AdaptiveRouting != nil {
		in, out := &in.AdaptiveRouting, &out.AdaptiveRouting
		*out = new(AdaptiveRouting)
		(*in).DeepCopyInto(*out)
	}
	if in.LocationStrategy != nil {
		in, out := &in.LocationStrategy, &out.LocationStrategy
		*out = new(LocationStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.SteeringPolicy != nil {
		in, out := &in.SteeringPolicy, &out.SteeringPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerParameters.
func (in *LoadBalancerParameters) DeepCopy() *LoadBalancerParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerPool) DeepCopyInto(out *LoadBalancerPool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerPool.
func (in *LoadBalancerPool) DeepCopy() *LoadBalancerPool {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerPool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerPoolList) DeepCopyInto(out *LoadBalancerPoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoadBalancerPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerPoolList.
func (in *LoadBalancerPoolList) DeepCopy() *LoadBalancerPoolList {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerPoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerPoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerPoolObservation) DeepCopyInto(out *LoadBalancerPoolObservation) {
	*out = *in
	if in.CreatedOn != nil {
		in, out := &in.CreatedOn, &out.CreatedOn
		*out = new(string)
		**out = **in
	}
	if in.ModifiedOn != nil {
		in, out := &in.ModifiedOn, &out.ModifiedOn
		*out = new(string)
		**out = **in
	}
	if in.Healthy != nil {
		in, out := &in.Healthy, &out.Healthy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerPoolObservation.
func (in *LoadBalancerPoolObservation) DeepCopy() *LoadBalancerPoolObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerPoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerPoolParameters) DeepCopyInto(out *LoadBalancerPoolParameters) {
	*out = *in
	if in.Account != nil {
		in, out := &in.Account, &out.Account
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MinimumOrigins != nil {
		in, out := &in.MinimumOrigins, &out.MinimumOrigins
		*out = new(int)
		**out = **in
	}
	if in.Monitor != nil {
		in, out := &in.Monitor, &out.Monitor
		*out = new(string)
		**out = **in
	}
	if in.MonitorRef != nil {
		in, out := &in.MonitorRef, &out.MonitorRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MonitorSelector != nil {
		in, out := &in.MonitorSelector, &out.MonitorSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Origins != nil {
		in, out := &in.Origins, &out.Origins
		*out = make([]LoadBalancerOrigin, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationEmail != nil {
		in, out := &in.NotificationEmail, &out.NotificationEmail
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(string)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(string)
		**out = **in
	}
	if in.LoadShedding != nil {
		in, out := &in.LoadShedding, &out.LoadShedding
		*out = new(LoadBalancerLoadShedding)
		(*in).DeepCopyInto(*out)
	}
	if in.OriginSteering != nil {
		in, out := &in.OriginSteering, &out.OriginSteering
		*out = new(LoadBalancerOriginSteering)
		(*in).DeepCopyInto(*out)
	}
	if in.CheckRegions != nil {
		in, out := &in.CheckRegions, &out.CheckRegions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerPoolParameters.
func (in *LoadBalancerPoolParameters) DeepCopy() *LoadBalancerPoolParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerPoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerPoolSpec) DeepCopyInto(out *LoadBalancerPoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerPoolSpec.
func (in *LoadBalancerPoolSpec) DeepCopy() *LoadBalancerPoolSpec {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerPoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerPoolStatus) DeepCopyInto(out *LoadBalancerPoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerPoolStatus.
func (in *LoadBalancerPoolStatus) DeepCopy() *LoadBalancerPoolStatus {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerPoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerRule) DeepCopyInto(out *LoadBalancerRule) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.Terminates != nil {
		in, out := &in.Terminates, &out.Terminates
		*out = new(bool)
		**out = **in
	}
	if in.FixedResponse != nil {
		in, out := &in.FixedResponse, &out.FixedResponse
		*out = new(LoadBalancerFixedResponse)
		(*in).DeepCopyInto(*out)
	}
	if in.Overrides != nil {
		in, out := &in.Overrides, &out.Overrides
		*out = new(LoadBalancerRuleOverrides)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerRule.
func (in *LoadBalancerRule) DeepCopy() *LoadBalancerRule {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerRuleOverrides) DeepCopyInto(out *LoadBalancerRuleOverrides) {
	*out = *in
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinityTTL != nil {
		in, out := &in.SessionAffinityTTL, &out.SessionAffinityTTL
		*out = new(int)
		**out = **in
	}
	if in.SessionAffinityAttributes != nil {
		in, out := &in.SessionAffinityAttributes, &out.SessionAffinityAttributes
		*out = new(SessionAffinityAttributes)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(int)
		**out = **in
	}
	if in.SteeringPolicy != nil {
		in, out := &in.SteeringPolicy, &out.SteeringPolicy
		*out = new(string)
		**out = **in
	}
	if in.FallbackPool != nil {
		in, out := &in.FallbackPool, &out.FallbackPool
		*out = new(string)
		**out = **in
	}
	if in.DefaultPools != nil {
		in, out := &in.DefaultPools, &out.DefaultPools
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PopPools != nil {
		in, out := &in.PopPools, &out.PopPools
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.RegionPools != nil {
		in, out := &in.RegionPools, &out.RegionPools
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.CountryPools != nil {
		in, out := &in.CountryPools, &out.CountryPools
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.RandomSteering != nil {
		in, out := &in.RandomSteering, &out.RandomSteering
		*out = new(RandomSteering)
		(*in).DeepCopyInto(*out)
	}
	if in.AdaptiveRouting != nil {
		in, out := &in.AdaptiveRouting, &out.AdaptiveRouting
		*out = new(AdaptiveRouting)
		(*in).DeepCopyInto(*out)
	}
	if in.LocationStrategy != nil {
		in, out := &in.LocationStrategy, &out.LocationStrategy
		*out = new(LocationStrategy)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerRuleOverrides.
func (in *LoadBalancerRuleOverrides) DeepCopy() *LoadBalancerRuleOverrides {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerRuleOverrides)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerSpec) DeepCopyInto(out *LoadBalancerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerSpec.
func (in *LoadBalancerSpec) DeepCopy() *LoadBalancerSpec {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerStatus) DeepCopyInto(out *LoadBalancerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerStatus.
func (in *LoadBalancerStatus) DeepCopy() *LoadBalancerStatus {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationStrategy) DeepCopyInto(out *LocationStrategy) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.PreferECSRegion != nil {
		in, out := &in.PreferECSRegion, &out.PreferECSRegion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationStrategy.
func (in *LocationStrategy) DeepCopy() *LocationStrategy {
	if in == nil {
		return nil
	}
	out := new(LocationStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RandomSteering) DeepCopyInto(out *RandomSteering) {
	*out = *in
	if in.DefaultWeight != nil {
		in, out := &in.DefaultWeight, &out.DefaultWeight
		*out = new(string)
		**out = **in
	}
	if in.PoolWeights != nil {
		in, out := &in.PoolWeights, &out.PoolWeights
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RandomSteering.
func (in *RandomSteering) DeepCopy() *RandomSteering {
	if in == nil {
		return nil
	}
	out := new(RandomSteering)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionAffinityAttributes) DeepCopyInto(out *SessionAffinityAttributes) {
	*out = *in
	if in.SameSite != nil {
		in, out := &in.SameSite, &out.SameSite
		*out = new(string)
		**out = **in
	}
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(string)
		**out = **in
	}
	if in.DrainDuration != nil {
		in, out := &in.DrainDuration, &out.DrainDuration
		*out = new(int)
		**out = **in
	}
	if in.ZeroDowntimeFailover != nil {
		in, out := &in.ZeroDowntimeFailover, &out.ZeroDowntimeFailover
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RequireAllHeaders != nil {
		in, out := &in.RequireAllHeaders, &out.RequireAllHeaders
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionAffinityAttributes.
func (in *SessionAffinityAttributes) DeepCopy() *SessionAffinityAttributes {
	if in == nil {
		return nil
	}
	out := new(SessionAffinityAttributes)
	in.DeepCopyInto(out)
	return out
}
