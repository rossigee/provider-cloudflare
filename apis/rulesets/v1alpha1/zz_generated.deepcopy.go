//go:build !ignore_autogenerated

/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ruleset) DeepCopyInto(out *Ruleset) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ruleset.
func (in *Ruleset) DeepCopy() *Ruleset {
	if in == nil {
		return nil
	}
	out := new(Ruleset)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Ruleset) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesetList) DeepCopyInto(out *RulesetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Ruleset, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesetList.
func (in *RulesetList) DeepCopy() *RulesetList {
	if in == nil {
		return nil
	}
	out := new(RulesetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RulesetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesetObservation) DeepCopyInto(out *RulesetObservation) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = new(string)
		**out = **in
	}
	if in.ShareableEntitlementName != nil {
		in, out := &in.ShareableEntitlementName, &out.ShareableEntitlementName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesetObservation.
func (in *RulesetObservation) DeepCopy() *RulesetObservation {
	if in == nil {
		return nil
	}
	out := new(RulesetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesetParameters) DeepCopyInto(out *RulesetParameters) {
	*out = *in
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
	if in.Account != nil {
		in, out := &in.Account, &out.Account
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesetRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesetParameters.
func (in *RulesetParameters) DeepCopy() *RulesetParameters {
	if in == nil {
		return nil
	}
	out := new(RulesetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesetRule) DeepCopyInto(out *RulesetRule) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ActionParameters != nil {
		in, out := &in.ActionParameters, &out.ActionParameters
		*out = new(RulesetRuleActionParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Ref != nil {
		in, out := &in.Ref, &out.Ref
		*out = new(string)
		**out = **in
	}
	if in.ScoreThreshold != nil {
		in, out := &in.ScoreThreshold, &out.ScoreThreshold
		*out = new(int)
		**out = **in
	}
	if in.RateLimit != nil {
		in, out := &in.RateLimit, &out.RateLimit
		*out = new(RulesetRuleRateLimit)
		(*in).DeepCopyInto(*out)
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(RulesetRuleLogging)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesetRule.
func (in *RulesetRule) DeepCopy() *RulesetRule {
	if in == nil {
		return nil
	}
	out := new(RulesetRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesetRuleActionParameters) DeepCopyInto(out *RulesetRuleActionParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Ruleset != nil {
		in, out := &in.Ruleset, &out.Ruleset
		*out = new(string)
		**out = **in
	}
	if in.Rulesets != nil {
		in, out := &in.Rulesets, &out.Rulesets
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(RulesetRuleActionParametersURI)
		(*in).DeepCopyInto(*out)
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make(map[string]RulesetRuleActionParametersHTTPHeader, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(RulesetRuleActionParametersBlockResponse)
		**out = **in
	}
	if in.HostHeader != nil {
		in, out := &in.HostHeader, &out.HostHeader
		*out = new(string)
		**out = **in
	}
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = new(RulesetRuleActionParametersOrigin)
		(*in).DeepCopyInto(*out)
	}
	if in.Overrides != nil {
		in, out := &in.Overrides, &out.Overrides
		*out = new(RulesetRuleActionParametersOverrides)
		(*in).DeepCopyInto(*out)
	}
	if in.Products != nil {
		in, out := &in.Products, &out.Products
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Phases != nil {
		in, out := &in.Phases, &out.Phases
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesetRuleActionParameters.
func (in *RulesetRuleActionParameters) DeepCopy() *RulesetRuleActionParameters {
	if in == nil {
		return nil
	}
	out := new(RulesetRuleActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesetRuleActionParametersBlockResponse) DeepCopyInto(out *RulesetRuleActionParametersBlockResponse) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesetRuleActionParametersBlockResponse.
func (in *RulesetRuleActionParametersBlockResponse) DeepCopy() *RulesetRuleActionParametersBlockResponse {
	if in == nil {
		return nil
	}
	out := new(RulesetRuleActionParametersBlockResponse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesetRuleActionParametersCategories) DeepCopyInto(out *RulesetRuleActionParametersCategories) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesetRuleActionParametersCategories.
func (in *RulesetRuleActionParametersCategories) DeepCopy() *RulesetRuleActionParametersCategories {
	if in == nil {
		return nil
	}
	out := new(RulesetRuleActionParametersCategories)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesetRuleActionParametersHTTPHeader) DeepCopyInto(out *RulesetRuleActionParametersHTTPHeader) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesetRuleActionParametersHTTPHeader.
func (in *RulesetRuleActionParametersHTTPHeader) DeepCopy() *RulesetRuleActionParametersHTTPHeader {
	if in == nil {
		return nil
	}
	out := new(RulesetRuleActionParametersHTTPHeader)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesetRuleActionParametersOrigin) DeepCopyInto(out *RulesetRuleActionParametersOrigin) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesetRuleActionParametersOrigin.
func (in *RulesetRuleActionParametersOrigin) DeepCopy() *RulesetRuleActionParametersOrigin {
	if in == nil {
		return nil
	}
	out := new(RulesetRuleActionParametersOrigin)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesetRuleActionParametersOverrides) DeepCopyInto(out *RulesetRuleActionParametersOverrides) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.SensitivityLevel != nil {
		in, out := &in.SensitivityLevel, &out.SensitivityLevel
		*out = new(string)
		**out = **in
	}
	if in.Categories != nil {
		in, out := &in.Categories, &out.Categories
		*out = make([]RulesetRuleActionParametersCategories, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesetRuleActionParametersRules, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesetRuleActionParametersOverrides.
func (in *RulesetRuleActionParametersOverrides) DeepCopy() *RulesetRuleActionParametersOverrides {
	if in == nil {
		return nil
	}
	out := new(RulesetRuleActionParametersOverrides)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesetRuleActionParametersRules) DeepCopyInto(out *RulesetRuleActionParametersRules) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ScoreThreshold != nil {
		in, out := &in.ScoreThreshold, &out.ScoreThreshold
		*out = new(int)
		**out = **in
	}
	if in.SensitivityLevel != nil {
		in, out := &in.SensitivityLevel, &out.SensitivityLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesetRuleActionParametersRules.
func (in *RulesetRuleActionParametersRules) DeepCopy() *RulesetRuleActionParametersRules {
	if in == nil {
		return nil
	}
	out := new(RulesetRuleActionParametersRules)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesetRuleActionParametersURI) DeepCopyInto(out *RulesetRuleActionParametersURI) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(RulesetRuleActionParametersURIPath)
		(*in).DeepCopyInto(*out)
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(RulesetRuleActionParametersURIQuery)
		(*in).DeepCopyInto(*out)
	}
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesetRuleActionParametersURI.
func (in *RulesetRuleActionParametersURI) DeepCopy() *RulesetRuleActionParametersURI {
	if in == nil {
		return nil
	}
	out := new(RulesetRuleActionParametersURI)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesetRuleActionParametersURIPath) DeepCopyInto(out *RulesetRuleActionParametersURIPath) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesetRuleActionParametersURIPath.
func (in *RulesetRuleActionParametersURIPath) DeepCopy() *RulesetRuleActionParametersURIPath {
	if in == nil {
		return nil
	}
	out := new(RulesetRuleActionParametersURIPath)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesetRuleActionParametersURIQuery) DeepCopyInto(out *RulesetRuleActionParametersURIQuery) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesetRuleActionParametersURIQuery.
func (in *RulesetRuleActionParametersURIQuery) DeepCopy() *RulesetRuleActionParametersURIQuery {
	if in == nil {
		return nil
	}
	out := new(RulesetRuleActionParametersURIQuery)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesetRuleLogging) DeepCopyInto(out *RulesetRuleLogging) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesetRuleLogging.
func (in *RulesetRuleLogging) DeepCopy() *RulesetRuleLogging {
	if in == nil {
		return nil
	}
	out := new(RulesetRuleLogging)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesetRuleRateLimit) DeepCopyInto(out *RulesetRuleRateLimit) {
	*out = *in
	if in.Characteristics != nil {
		in, out := &in.Characteristics, &out.Characteristics
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RequestsPerPeriod != nil {
		in, out := &in.RequestsPerPeriod, &out.RequestsPerPeriod
		*out = new(int)
		**out = **in
	}
	if in.ScorePerPeriod != nil {
		in, out := &in.ScorePerPeriod, &out.ScorePerPeriod
		*out = new(int)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(int)
		**out = **in
	}
	if in.MitigationTimeout != nil {
		in, out := &in.MitigationTimeout, &out.MitigationTimeout
		*out = new(int)
		**out = **in
	}
	if in.CountingExpression != nil {
		in, out := &in.CountingExpression, &out.CountingExpression
		*out = new(string)
		**out = **in
	}
	if in.RequestsToOrigin != nil {
		in, out := &in.RequestsToOrigin, &out.RequestsToOrigin
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesetRuleRateLimit.
func (in *RulesetRuleRateLimit) DeepCopy() *RulesetRuleRateLimit {
	if in == nil {
		return nil
	}
	out := new(RulesetRuleRateLimit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesetSpec) DeepCopyInto(out *RulesetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesetSpec.
func (in *RulesetSpec) DeepCopy() *RulesetSpec {
	if in == nil {
		return nil
	}
	out := new(RulesetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesetStatus) DeepCopyInto(out *RulesetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesetStatus.
func (in *RulesetStatus) DeepCopy() *RulesetStatus {
	if in == nil {
		return nil
	}
	out := new(RulesetStatus)
	in.DeepCopyInto(out)
	return out
}
