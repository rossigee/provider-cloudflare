/*
Copyright 2025 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this ProviderConfig.
func (pc *ProviderConfig) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return pc.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ProviderConfig.
func (pc *ProviderConfig) GetDeletionPolicy() xpv1.DeletionPolicy {
	return xpv1.DeletionDelete
}

// GetManagementPolicies of this ProviderConfig.
func (pc *ProviderConfig) GetManagementPolicies() xpv1.ManagementPolicies {
	return xpv1.ManagementPolicies{}
}

// GetProviderConfigReference of this ProviderConfig.
func (pc *ProviderConfig) GetProviderConfigReference() *xpv1.Reference {
	return nil
}

// GetPublishConnectionDetailsTo of this ProviderConfig.
func (pc *ProviderConfig) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return nil
}

// GetWriteConnectionSecretsToReference of this ProviderConfig.
func (pc *ProviderConfig) GetWriteConnectionSecretsToReference() *xpv1.SecretReference {
	return nil
}

// SetConditions of this ProviderConfig.
func (pc *ProviderConfig) SetConditions(c ...xpv1.Condition) {
	pc.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ProviderConfig.
func (pc *ProviderConfig) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	// ProviderConfig doesn't have a deletion policy
}

// SetManagementPolicies of this ProviderConfig.
func (pc *ProviderConfig) SetManagementPolicies(r xpv1.ManagementPolicies) {
	// ProviderConfig doesn't have management policies
}

// SetProviderConfigReference of this ProviderConfig.
func (pc *ProviderConfig) SetProviderConfigReference(r *xpv1.Reference) {
	// ProviderConfig doesn't reference another provider config
}

// SetPublishConnectionDetailsTo of this ProviderConfig.
func (pc *ProviderConfig) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	// ProviderConfig doesn't publish connection details
}

// SetWriteConnectionSecretsToReference of this ProviderConfig.
func (pc *ProviderConfig) SetWriteConnectionSecretsToReference(r *xpv1.SecretReference) {
	// ProviderConfig doesn't write connection secrets
}

// GetUsers of this ProviderConfig.
func (pc *ProviderConfig) GetUsers() int64 {
	return pc.Status.Users
}

// SetUsers of this ProviderConfig.
func (pc *ProviderConfig) SetUsers(i int64) {
	pc.Status.Users = i
}