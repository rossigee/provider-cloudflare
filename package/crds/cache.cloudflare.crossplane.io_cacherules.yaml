---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: cacherules.cache.cloudflare.crossplane.io
spec:
  group: cache.cloudflare.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - cloudflare
    kind: CacheRule
    listKind: CacheRuleList
    plural: cacherules
    singular: cacherule
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.atProvider.id
      name: ID
      type: string
    - jsonPath: .spec.forProvider.zone
      name: ZONE
      type: string
    - jsonPath: .spec.forProvider.expression
      name: EXPRESSION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A CacheRule is a managed resource that represents a Cloudflare
          Cache Rule
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A CacheRuleSpec defines the desired state of a CacheRule.
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: CacheRuleParameters define the desired state of a Cloudflare
                  Cache Rule
                properties:
                  additionalCacheablePorts:
                    description: AdditionalCacheablePorts specifies additional ports
                      where content should be cached.
                    items:
                      type: integer
                    type: array
                  browserTTL:
                    description: BrowserTTL controls the cache TTL in user browsers.
                    properties:
                      default:
                        description: Default is the default TTL in seconds when mode
                          is "override_origin".
                        type: integer
                      mode:
                        description: |-
                          Mode controls how browser TTL is determined.
                          Valid values: "respect_origin", "override_origin", "bypass"
                        type: string
                    required:
                    - mode
                    type: object
                  cache:
                    description: |-
                      Cache controls whether to cache the response.
                      When false, disables caching for matching requests.
                    type: boolean
                  cacheKey:
                    description: CacheKey controls how cache keys are generated.
                    properties:
                      cacheByDeviceType:
                        description: CacheByDeviceType includes device type in cache
                          key.
                        type: boolean
                      cacheDeceptionArmor:
                        description: CacheDeceptionArmor enables cache deception armor.
                        type: boolean
                      customKey:
                        description: CustomKey allows customization of cache key components.
                        properties:
                          cookie:
                            description: Cookie controls cookie inclusion in cache
                              key.
                            properties:
                              checkPresence:
                                description: CheckPresence specifies fields whose
                                  presence (not value) to include in cache key.
                                items:
                                  type: string
                                type: array
                              include:
                                description: Include specifies fields to include in
                                  cache key.
                                items:
                                  type: string
                                type: array
                            type: object
                          header:
                            description: Header controls header inclusion in cache
                              key.
                            properties:
                              checkPresence:
                                description: CheckPresence specifies headers whose
                                  presence (not value) to include in cache key.
                                items:
                                  type: string
                                type: array
                              contains:
                                additionalProperties:
                                  items:
                                    type: string
                                  type: array
                                description: |-
                                  Contains specifies header values that must be present for cache key inclusion.
                                  Key is header name, value is list of required values.
                                type: object
                              excludeOrigin:
                                description: ExcludeOrigin excludes origin headers
                                  from cache key.
                                type: boolean
                              include:
                                description: Include specifies headers to include
                                  in cache key.
                                items:
                                  type: string
                                type: array
                            type: object
                          host:
                            description: Host controls host-related attributes in
                              cache key.
                            properties:
                              resolved:
                                description: Resolved includes resolved hostname in
                                  cache key.
                                type: boolean
                            type: object
                          query:
                            description: Query controls query string inclusion in
                              cache key.
                            properties:
                              all:
                                description: |-
                                  All includes all query parameters in cache key.
                                  When true, Include and Exclude are ignored.
                                type: boolean
                              exclude:
                                description: |-
                                  Exclude specifies query parameters to exclude from cache key.
                                  If All is true, this field is ignored.
                                items:
                                  type: string
                                type: array
                              ignore:
                                description: Ignore ignores all query parameters in
                                  cache key.
                                type: boolean
                              include:
                                description: |-
                                  Include specifies query parameters to include in cache key.
                                  If All is true, this field is ignored.
                                items:
                                  type: string
                                type: array
                            type: object
                          user:
                            description: User controls user-specific attributes in
                              cache key.
                            properties:
                              deviceType:
                                description: DeviceType includes device type in cache
                                  key.
                                type: boolean
                              geo:
                                description: Geo includes geographic information in
                                  cache key.
                                type: boolean
                              lang:
                                description: Lang includes language preference in
                                  cache key.
                                type: boolean
                            type: object
                        type: object
                      ignoreQueryStringsOrder:
                        description: IgnoreQueryStringsOrder ignores the order of
                          query string parameters.
                        type: boolean
                    type: object
                  cacheReserve:
                    description: CacheReserve controls Cache Reserve settings.
                    properties:
                      eligible:
                        description: Eligible controls whether content is eligible
                          for Cache Reserve.
                        type: boolean
                      minimumFileSize:
                        description: MinimumFileSize is the minimum file size in bytes
                          for Cache Reserve eligibility.
                        type: integer
                    type: object
                  description:
                    description: Description is a description of the cache rule.
                    type: string
                  edgeTTL:
                    description: EdgeTTL controls the cache TTL at Cloudflare edge
                      locations.
                    properties:
                      default:
                        description: Default is the default TTL in seconds when mode
                          is "override_origin".
                        type: integer
                      mode:
                        description: |-
                          Mode controls how edge TTL is determined.
                          Valid values: "respect_origin", "override_origin", "bypass"
                        type: string
                      statusCodeTTL:
                        description: StatusCodeTTL allows setting different TTLs based
                          on origin response status codes.
                        items:
                          description: StatusCodeTTL defines TTL settings for specific
                            HTTP status codes
                          properties:
                            statusCodeRange:
                              description: |-
                                StatusCodeRange specifies a range of status codes.
                                Either StatusCodeValue or StatusCodeRange must be specified.
                              properties:
                                from:
                                  description: From is the start of the status code
                                    range (inclusive).
                                  type: integer
                                to:
                                  description: To is the end of the status code range
                                    (inclusive).
                                  type: integer
                              required:
                              - from
                              - to
                              type: object
                            statusCodeValue:
                              description: |-
                                StatusCodeValue specifies a single status code (e.g., 200, 404).
                                Either StatusCodeValue or StatusCodeRange must be specified.
                              type: integer
                            value:
                              description: |-
                                Value is the TTL in seconds for the specified status code(s).
                                Use -1 to indicate "no cache".
                              type: integer
                          required:
                          - value
                          type: object
                        type: array
                    required:
                    - mode
                    type: object
                  enabled:
                    description: Enabled specifies whether the cache rule is enabled.
                    type: boolean
                  expression:
                    description: |-
                      Expression is the Cloudflare expression that determines when this cache rule applies.
                      Examples:
                      - "(http.request.uri.path contains \"/images/\")"
                      - "(http.request.uri.path.extension eq \"jpg\")"
                      - "(http.host eq \"example.com\" and http.request.uri.path.extension in {\"css\" \"js\"})"
                    type: string
                  name:
                    description: Name is the name of the cache rule.
                    type: string
                  originCacheControl:
                    description: OriginCacheControl controls whether to respect origin
                      cache control headers.
                    type: boolean
                  originErrorPagePassthru:
                    description: OriginErrorPagePassthru controls whether to pass
                      through origin error pages.
                    type: boolean
                  priority:
                    description: |-
                      Priority controls the order of rule execution (lower values execute first).
                      Valid range: 1-1000000000
                    type: integer
                  readTimeout:
                    description: ReadTimeout specifies the read timeout for origin
                      requests in seconds.
                    type: integer
                  respectStrongETags:
                    description: RespectStrongETags controls whether to respect strong
                      ETags from origin.
                    type: boolean
                  serveStale:
                    description: ServeStale controls serving stale content from cache.
                    properties:
                      disableStaleWhileUpdating:
                        description: DisableStaleWhileUpdating disables serving stale
                          content while updating cache.
                        type: boolean
                    type: object
                  zone:
                    description: |-
                      Zone is the zone ID where this cache rule will be applied.
                      Cache rules are zone-scoped resources.
                    type: string
                required:
                - expression
                - name
                - zone
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A CacheRuleStatus represents the observed state of a CacheRule.
            properties:
              atProvider:
                description: CacheRuleObservation represents the observed state of
                  a Cloudflare Cache Rule
                properties:
                  createdOn:
                    description: CreatedOn is when the cache rule was created.
                    type: string
                  id:
                    description: ID is the cache rule ID.
                    type: string
                  lastUpdated:
                    description: LastUpdated is when the cache rule was last updated.
                    type: string
                  modifiedOn:
                    description: ModifiedOn is when the cache rule was last modified.
                    type: string
                  rulesetId:
                    description: RulesetID is the ID of the underlying ruleset containing
                      this cache rule.
                    type: string
                  version:
                    description: Version is the version of the cache rule.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
