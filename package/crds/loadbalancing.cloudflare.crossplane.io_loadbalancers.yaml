---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.0
  name: loadbalancers.loadbalancing.cloudflare.crossplane.io
spec:
  group: loadbalancing.cloudflare.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - cloudflare
    kind: LoadBalancer
    listKind: LoadBalancerList
    plural: loadbalancers
    singular: loadbalancer
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.atProvider.id
      name: ID
      type: string
    - jsonPath: .spec.forProvider.zone
      name: ZONE
      type: string
    - jsonPath: .spec.forProvider.steeringPolicy
      name: STEERING
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LoadBalancer is a managed resource that represents a Cloudflare
          Load Balancer
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LoadBalancerSpec defines the desired state of LoadBalancer
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: LoadBalancerParameters define the desired state of a
                  Cloudflare Load Balancer
                properties:
                  adaptiveRouting:
                    description: AdaptiveRouting contains adaptive routing configuration.
                    properties:
                      failoverAcrossPools:
                        description: FailoverAcrossPools enables failover across pools
                          when no healthy origins exist.
                        type: boolean
                    type: object
                  countryPools:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: CountryPools maps countries to pool lists for country-steering.
                    type: object
                  defaultPoolRefs:
                    description: DefaultPoolRefs is a list of references to LoadBalancerPool
                      resources.
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: |-
                                Resolution specifies whether resolution of this reference is required.
                                The default is 'Required', which means the reconcile will fail if the
                                reference cannot be resolved. 'Optional' means this reference will be
                                a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: |-
                                Resolve specifies when this reference should be resolved. The default
                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                the corresponding field is not present. Use 'Always' to resolve the
                                reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  defaultPoolSelector:
                    description: DefaultPoolSelector selects references to LoadBalancerPool
                      resources.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  defaultPools:
                    description: DefaultPools is the list of pool IDs ordered by their
                      failover priority.
                    items:
                      type: string
                    type: array
                  description:
                    description: Description is a human-readable description of the
                      load balancer.
                    type: string
                  enabled:
                    description: Enabled indicates whether the load balancer is enabled.
                    type: boolean
                  fallbackPool:
                    description: FallbackPool is the pool ID to use when all other
                      pools are unhealthy.
                    type: string
                  fallbackPoolRef:
                    description: FallbackPoolRef is a reference to a LoadBalancerPool
                      resource to use as fallback.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  fallbackPoolSelector:
                    description: FallbackPoolSelector selects a reference to a LoadBalancerPool
                      resource as fallback.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  locationStrategy:
                    description: LocationStrategy contains location strategy configuration.
                    properties:
                      mode:
                        description: |-
                          Mode determines how to get the client IP for location-based steering.
                          Valid values: "pop", "resolver_ip"
                        type: string
                      preferECSRegion:
                        description: PreferECSRegion controls whether to prefer the
                          ECS region.
                        type: string
                    type: object
                  name:
                    description: Name is the DNS name for this load balancer.
                    type: string
                  popPools:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: PopPools maps Cloudflare PoPs to pool lists for pop-steering.
                    type: object
                  proxied:
                    description: Proxied indicates whether traffic should be proxied
                      through Cloudflare.
                    type: boolean
                  randomSteering:
                    description: RandomSteering contains random steering configuration.
                    properties:
                      defaultWeight:
                        description: DefaultWeight is the default weight for pools
                          not specified in PoolWeights.
                        type: string
                      poolWeights:
                        additionalProperties:
                          type: string
                        description: PoolWeights maps pool IDs to their weights.
                        type: object
                    type: object
                  regionPools:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: RegionPools maps regions to pool lists for geo-steering.
                    type: object
                  rules:
                    description: Rules contains traffic steering rules for advanced
                      routing.
                    items:
                      description: LoadBalancerRule represents a traffic steering
                        rule
                      properties:
                        condition:
                          description: Condition is the expression that determines
                            when this rule applies.
                          type: string
                        disabled:
                          description: Disabled indicates whether the rule is disabled.
                          type: boolean
                        fixedResponse:
                          description: FixedResponse contains a fixed response configuration.
                          properties:
                            contentType:
                              description: ContentType is the Content-Type header
                                value.
                              type: string
                            location:
                              description: Location is the Location header value for
                                redirects.
                              type: string
                            messageBody:
                              description: MessageBody is the response body content.
                              type: string
                            statusCode:
                              description: StatusCode is the HTTP status code to return.
                              type: integer
                          type: object
                        name:
                          description: Name is a human-readable name for the rule.
                          type: string
                        overrides:
                          description: Overrides contains pool and routing overrides
                            for this rule.
                          properties:
                            adaptiveRouting:
                              description: AdaptiveRouting overrides adaptive routing
                                configuration.
                              properties:
                                failoverAcrossPools:
                                  description: FailoverAcrossPools enables failover
                                    across pools when no healthy origins exist.
                                  type: boolean
                              type: object
                            countryPools:
                              additionalProperties:
                                items:
                                  type: string
                                type: array
                              description: CountryPools overrides the country pools.
                              type: object
                            defaultPools:
                              description: DefaultPools overrides the default pools.
                              items:
                                type: string
                              type: array
                            fallbackPool:
                              description: FallbackPool overrides the fallback pool.
                              type: string
                            locationStrategy:
                              description: LocationStrategy overrides location strategy
                                configuration.
                              properties:
                                mode:
                                  description: |-
                                    Mode determines how to get the client IP for location-based steering.
                                    Valid values: "pop", "resolver_ip"
                                  type: string
                                preferECSRegion:
                                  description: PreferECSRegion controls whether to
                                    prefer the ECS region.
                                  type: string
                              type: object
                            popPools:
                              additionalProperties:
                                items:
                                  type: string
                                type: array
                              description: PopPools overrides the PoP pools.
                              type: object
                            randomSteering:
                              description: RandomSteering overrides random steering
                                configuration.
                              properties:
                                defaultWeight:
                                  description: DefaultWeight is the default weight
                                    for pools not specified in PoolWeights.
                                  type: string
                                poolWeights:
                                  additionalProperties:
                                    type: string
                                  description: PoolWeights maps pool IDs to their
                                    weights.
                                  type: object
                              type: object
                            regionPools:
                              additionalProperties:
                                items:
                                  type: string
                                type: array
                              description: RegionPools overrides the region pools.
                              type: object
                            sessionAffinity:
                              description: SessionAffinity overrides the session affinity
                                setting.
                              type: string
                            sessionAffinityAttributes:
                              description: SessionAffinityAttributes overrides session
                                affinity attributes.
                              properties:
                                drainDuration:
                                  description: DrainDuration is how long to honor
                                    session affinity when a pool becomes unhealthy.
                                  type: integer
                                headers:
                                  description: Headers contains headers for session
                                    affinity.
                                  items:
                                    type: string
                                  type: array
                                requireAllHeaders:
                                  description: RequireAllHeaders indicates whether
                                    all headers must match for session affinity.
                                  type: boolean
                                sameSite:
                                  description: |-
                                    SameSite controls the SameSite attribute for session affinity cookies.
                                    Valid values: "Auto", "Lax", "None", "Strict"
                                  type: string
                                secure:
                                  description: Secure indicates whether the session
                                    affinity cookie should be secure.
                                  type: string
                                zeroDowntimeFailover:
                                  description: |-
                                    ZeroDowntimeFailover controls zero-downtime failover.
                                    Valid values: "none", "sticky", "temporary"
                                  type: string
                              type: object
                            sessionAffinityTtl:
                              description: SessionAffinityTTL overrides the session
                                affinity TTL.
                              type: integer
                            steeringPolicy:
                              description: SteeringPolicy overrides the steering policy.
                              type: string
                            ttl:
                              description: TTL overrides the DNS TTL.
                              type: integer
                          type: object
                        priority:
                          description: Priority controls the order of rule execution
                            (lower values execute first).
                          type: integer
                        terminates:
                          description: Terminates indicates whether to stop processing
                            rules after this one.
                          type: boolean
                      required:
                      - condition
                      - name
                      - priority
                      type: object
                    type: array
                  sessionAffinity:
                    description: |-
                      SessionAffinity controls session stickiness.
                      Valid values: "none", "cookie", "ip_cookie"
                    type: string
                  sessionAffinityAttributes:
                    description: SessionAffinityAttributes contains session affinity
                      configuration.
                    properties:
                      drainDuration:
                        description: DrainDuration is how long to honor session affinity
                          when a pool becomes unhealthy.
                        type: integer
                      headers:
                        description: Headers contains headers for session affinity.
                        items:
                          type: string
                        type: array
                      requireAllHeaders:
                        description: RequireAllHeaders indicates whether all headers
                          must match for session affinity.
                        type: boolean
                      sameSite:
                        description: |-
                          SameSite controls the SameSite attribute for session affinity cookies.
                          Valid values: "Auto", "Lax", "None", "Strict"
                        type: string
                      secure:
                        description: Secure indicates whether the session affinity
                          cookie should be secure.
                        type: string
                      zeroDowntimeFailover:
                        description: |-
                          ZeroDowntimeFailover controls zero-downtime failover.
                          Valid values: "none", "sticky", "temporary"
                        type: string
                    type: object
                  sessionAffinityTtl:
                    description: SessionAffinityTTL is the TTL for session affinity
                      in seconds.
                    type: integer
                  steeringPolicy:
                    description: |-
                      SteeringPolicy controls pool selection logic.
                      Valid values: "off", "geo", "dynamic_latency", "random", "proximity",
                      "least_outstanding_requests", "least_connections"
                    type: string
                  ttl:
                    description: TTL is the DNS TTL for the load balancer.
                    type: integer
                  zone:
                    description: |-
                      Zone is the zone ID where this load balancer will be created.
                      Load balancers are zone-scoped resources.
                    type: string
                required:
                - zone
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: LoadBalancerStatus defines the observed state of LoadBalancer
            properties:
              atProvider:
                description: LoadBalancerObservation represents the observed state
                  of a Cloudflare Load Balancer
                properties:
                  createdOn:
                    description: CreatedOn is when the load balancer was created.
                    type: string
                  id:
                    description: ID is the load balancer ID.
                    type: string
                  modifiedOn:
                    description: ModifiedOn is when the load balancer was last modified.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
