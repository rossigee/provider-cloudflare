---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.0
  name: rulesets.rulesets.cloudflare.crossplane.io
spec:
  group: rulesets.cloudflare.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - cloudflare
    kind: Ruleset
    listKind: RulesetList
    plural: rulesets
    singular: ruleset
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.atProvider.id
      name: ID
      type: string
    - jsonPath: .spec.forProvider.kind
      name: KIND
      type: string
    - jsonPath: .spec.forProvider.phase
      name: PHASE
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Ruleset is a managed resource that represents a Cloudflare Ruleset
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RulesetSpec defines the desired state of Ruleset
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: RulesetParameters define the desired state of a Cloudflare
                  Ruleset
                properties:
                  account:
                    description: |-
                      Account is the account ID where this ruleset will be applied.
                      Either Zone or Account must be specified, but not both.
                    type: string
                  description:
                    description: Description is a description of the ruleset.
                    type: string
                  kind:
                    description: |-
                      Kind specifies the kind of ruleset.
                      Valid values: "managed", "custom", "root", "zone"
                    type: string
                  name:
                    description: Name is the name of the ruleset.
                    type: string
                  phase:
                    description: |-
                      Phase specifies when the ruleset is executed.
                      Valid values: "ddos_l4", "ddos_l7", "http_request_firewall_custom",
                      "http_request_firewall_managed", "http_request_transform",
                      "http_request_late_transform", "http_response_headers_transform",
                      "http_response_firewall", "http_log_custom", "magic_transit"
                    type: string
                  rules:
                    description: Rules is the list of rules in this ruleset.
                    items:
                      description: RulesetRule represents a single rule in a ruleset
                      properties:
                        action:
                          description: |-
                            Action specifies what action to take when the rule matches.
                            Valid values: "allow", "block", "challenge", "js_challenge",
                            "managed_challenge", "log", "bypass", "rewrite", "redirect",
                            "route", "score", "serve_error", "set_config", "skip", "execute"
                          type: string
                        actionParameters:
                          description: ActionParameters provides additional configuration
                            for the action.
                          properties:
                            headers:
                              additionalProperties:
                                description: RulesetRuleActionParametersHTTPHeader
                                  contains HTTP header transformation parameters
                                properties:
                                  expression:
                                    description: Expression is the dynamic expression
                                      for the header value.
                                    type: string
                                  operation:
                                    description: |-
                                      Operation specifies the header operation.
                                      Valid values: "set", "add", "remove"
                                    type: string
                                  value:
                                    description: Value is the header value for set/add
                                      operations.
                                    type: string
                                required:
                                - operation
                                type: object
                              description: Headers contains HTTP header transformation
                                parameters.
                              type: object
                            hostHeader:
                              description: HostHeader for origin override.
                              type: string
                            id:
                              description: ID for execute action referencing another
                                ruleset.
                              type: string
                            origin:
                              description: Origin contains origin override parameters.
                              properties:
                                host:
                                  description: Host is the origin hostname.
                                  type: string
                                port:
                                  description: Port is the origin port.
                                  type: integer
                              type: object
                            overrides:
                              description: Overrides contains rule override parameters
                                for managed rulesets.
                              properties:
                                action:
                                  description: Action to override for all rules.
                                  type: string
                                categories:
                                  description: Categories contains category-specific
                                    overrides.
                                  items:
                                    description: RulesetRuleActionParametersCategories
                                      contains category override parameters
                                    properties:
                                      action:
                                        description: Action to override for this category.
                                        type: string
                                      category:
                                        description: Category is the rule category.
                                        type: string
                                      enabled:
                                        description: Enabled specifies whether this
                                          category is enabled.
                                        type: boolean
                                    required:
                                    - category
                                    type: object
                                  type: array
                                enabled:
                                  description: Enabled specifies whether overrides
                                    are enabled.
                                  type: boolean
                                rules:
                                  description: Rules contains rule-specific overrides.
                                  items:
                                    description: RulesetRuleActionParametersRules
                                      contains rule-specific override parameters
                                    properties:
                                      action:
                                        description: Action to override for this rule.
                                        type: string
                                      enabled:
                                        description: Enabled specifies whether this
                                          rule is enabled.
                                        type: boolean
                                      id:
                                        description: ID is the rule ID to override.
                                        type: string
                                      scoreThreshold:
                                        description: ScoreThreshold to override for
                                          this rule.
                                        type: integer
                                      sensitivityLevel:
                                        description: SensitivityLevel to override
                                          for this rule.
                                        type: string
                                    required:
                                    - id
                                    type: object
                                  type: array
                                sensitivityLevel:
                                  description: SensitivityLevel to override for all
                                    rules.
                                  type: string
                              type: object
                            phases:
                              description: Phases for managed rulesets.
                              items:
                                type: string
                              type: array
                            products:
                              description: Products for managed rulesets.
                              items:
                                type: string
                              type: array
                            response:
                              description: Response contains block response configuration.
                              properties:
                                content:
                                  description: Content is the response body content.
                                  type: string
                                contentType:
                                  description: ContentType is the response content
                                    type.
                                  type: string
                                statusCode:
                                  description: StatusCode is the HTTP status code
                                    to return.
                                  type: integer
                              required:
                              - content
                              - contentType
                              - statusCode
                              type: object
                            rules:
                              additionalProperties:
                                items:
                                  type: string
                                type: array
                              description: Rules for overriding specific managed rules.
                              type: object
                            ruleset:
                              description: Ruleset for execute action referencing
                                another ruleset.
                              type: string
                            rulesets:
                              description: Rulesets for execute action referencing
                                multiple rulesets.
                              items:
                                type: string
                              type: array
                            uri:
                              description: URI contains URI transformation parameters.
                              properties:
                                origin:
                                  description: Origin specifies whether to apply to
                                    origin requests.
                                  type: boolean
                                path:
                                  description: Path contains path transformation parameters.
                                  properties:
                                    expression:
                                      description: Expression is the dynamic expression
                                        to evaluate.
                                      type: string
                                    value:
                                      description: Value is the static value to set.
                                      type: string
                                  type: object
                                query:
                                  description: Query contains query transformation
                                    parameters.
                                  properties:
                                    expression:
                                      description: Expression is the dynamic expression
                                        to evaluate.
                                      type: string
                                    value:
                                      description: Value is the static value to set.
                                      type: string
                                  type: object
                              type: object
                          type: object
                        description:
                          description: Description is a human-readable description
                            of the rule.
                          type: string
                        enabled:
                          description: Enabled specifies whether the rule is enabled.
                          type: boolean
                        expression:
                          description: Expression is the Cloudflare expression that
                            determines when this rule matches.
                          type: string
                        id:
                          description: ID is the rule ID (read-only).
                          type: string
                        logging:
                          description: Logging contains logging configuration for
                            the rule.
                          properties:
                            enabled:
                              description: Enabled specifies whether logging is enabled
                                for this rule.
                              type: boolean
                          type: object
                        rateLimit:
                          description: RateLimit contains rate limiting configuration.
                          properties:
                            characteristics:
                              description: Characteristics define what to rate limit
                                on.
                              items:
                                type: string
                              type: array
                            countingExpression:
                              description: CountingExpression is the expression for
                                counting requests.
                              type: string
                            mitigationTimeout:
                              description: MitigationTimeout is how long to block
                                after rate limit hit.
                              type: integer
                            period:
                              description: Period is the time period in seconds.
                              type: integer
                            requestsPerPeriod:
                              description: RequestsPerPeriod is the number of requests
                                allowed per period.
                              type: integer
                            requestsToOrigin:
                              description: RequestsToOrigin specifies whether to count
                                requests to origin.
                              type: boolean
                            scorePerPeriod:
                              description: ScorePerPeriod is the score per period
                                for rate limiting.
                              type: integer
                          type: object
                        ref:
                          description: Ref is a reference to another rule or ruleset.
                          type: string
                        scoreThreshold:
                          description: ScoreThreshold is the score threshold for managed
                            rules.
                          type: integer
                      required:
                      - action
                      - expression
                      type: object
                    type: array
                  zone:
                    description: |-
                      Zone is the zone ID where this ruleset will be applied.
                      Either Zone or Account must be specified, but not both.
                    type: string
                required:
                - kind
                - name
                - phase
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RulesetStatus defines the observed state of Ruleset
            properties:
              atProvider:
                description: RulesetObservation represents the observed state of a
                  Cloudflare Ruleset
                properties:
                  id:
                    description: ID is the ruleset ID.
                    type: string
                  lastUpdated:
                    description: LastUpdated is when the ruleset was last updated.
                    type: string
                  shareableEntitlementName:
                    description: ShareableEntitlementName is the shareable entitlement
                      name.
                    type: string
                  version:
                    description: Version is the ruleset version.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
