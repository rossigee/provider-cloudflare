---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.0
  name: ratelimits.security.cloudflare.crossplane.io
spec:
  group: security.cloudflare.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - cloudflare
    kind: RateLimit
    listKind: RateLimitList
    plural: ratelimits
    singular: ratelimit
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.atProvider.id
      name: ID
      type: string
    - jsonPath: .status.atProvider.threshold
      name: THRESHOLD
      type: integer
    - jsonPath: .status.atProvider.period
      name: PERIOD
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A RateLimit is a managed resource that represents a Cloudflare
          Rate Limit rule.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RateLimitSpec defines the desired state of a Rate Limit.
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: RateLimitParameters define the desired state of a Cloudflare
                  Rate Limit rule.
                properties:
                  action:
                    description: Action defines what action to take when the rate
                      limit is exceeded.
                    properties:
                      mode:
                        description: Mode defines the action mode.
                        enum:
                        - simulate
                        - ban
                        - challenge
                        - js_challenge
                        - managed_challenge
                        type: string
                      response:
                        description: Response is a custom response to return.
                        properties:
                          body:
                            description: Body is the response body.
                            type: string
                          contentType:
                            description: ContentType is the content type of the response.
                            type: string
                        required:
                        - body
                        - contentType
                        type: object
                      timeout:
                        description: Timeout is the timeout for the action in seconds.
                        maximum: 86400
                        minimum: 1
                        type: integer
                    required:
                    - mode
                    type: object
                  bypass:
                    description: Bypass is a list of characteristics that will bypass
                      this rate limit.
                    items:
                      description: RateLimitKeyValue is a key-value pair used in bypass
                        rules.
                      properties:
                        name:
                          description: Name is the characteristic name.
                          type: string
                        value:
                          description: Value is the characteristic value.
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  correlate:
                    description: Correlate defines how requests are correlated for
                      rate limiting.
                    properties:
                      by:
                        description: By defines the correlation method.
                        enum:
                        - nat
                        - cf-connecting-ip
                        type: string
                    required:
                    - by
                    type: object
                  description:
                    description: Description is a human-readable description of the
                      rate limit.
                    type: string
                  disabled:
                    description: Disabled indicates if the rate limit is disabled.
                    type: boolean
                  match:
                    description: Match defines the traffic matching rules for this
                      rate limit.
                    properties:
                      request:
                        description: Request contains matching rules for requests.
                        properties:
                          methods:
                            description: Methods is a list of HTTP methods to match.
                            enum:
                            - GET
                            - POST
                            - PUT
                            - DELETE
                            - PATCH
                            - HEAD
                            - OPTIONS
                            items:
                              type: string
                            type: array
                          schemes:
                            description: Schemes is a list of schemes to match.
                            enum:
                            - HTTP
                            - HTTPS
                            items:
                              type: string
                            type: array
                          urlPattern:
                            description: URLPattern is a URL pattern to match.
                            type: string
                        type: object
                      response:
                        description: Response contains matching rules for responses.
                        properties:
                          headers:
                            description: Headers is a list of headers to match.
                            items:
                              description: |-
                                RateLimitResponseMatcherHeader contains the structure of the origin
                                HTTP headers used in request matcher checks.
                              properties:
                                name:
                                  description: Name is the header name.
                                  type: string
                                op:
                                  description: Op is the operation to perform.
                                  enum:
                                  - eq
                                  - ne
                                  - contains
                                  - startswith
                                  - endswith
                                  type: string
                                value:
                                  description: Value is the header value to compare
                                    against.
                                  type: string
                              required:
                              - name
                              - op
                              - value
                              type: object
                            type: array
                          originTraffic:
                            description: OriginTraffic indicates if origin traffic
                              should be considered.
                            type: boolean
                          statuses:
                            description: Statuses is a list of HTTP status codes to
                              match.
                            items:
                              type: integer
                            type: array
                        type: object
                    required:
                    - request
                    type: object
                  period:
                    description: Period is the time period in seconds during which
                      the threshold applies.
                    maximum: 86400
                    minimum: 1
                    type: integer
                  threshold:
                    description: Threshold is the number of requests allowed within
                      the specified period.
                    minimum: 1
                    type: integer
                  zone:
                    description: Zone is the zone ID where this rate limit will be
                      applied.
                    type: string
                required:
                - action
                - match
                - period
                - threshold
                - zone
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RateLimitStatus defines the observed state of a Rate Limit.
            properties:
              atProvider:
                description: RateLimitObservation are the observable fields of a Rate
                  Limit.
                properties:
                  action:
                    description: Action defines what action to take when the rate
                      limit is exceeded.
                    properties:
                      mode:
                        description: Mode defines the action mode.
                        enum:
                        - simulate
                        - ban
                        - challenge
                        - js_challenge
                        - managed_challenge
                        type: string
                      response:
                        description: Response is a custom response to return.
                        properties:
                          body:
                            description: Body is the response body.
                            type: string
                          contentType:
                            description: ContentType is the content type of the response.
                            type: string
                        required:
                        - body
                        - contentType
                        type: object
                      timeout:
                        description: Timeout is the timeout for the action in seconds.
                        maximum: 86400
                        minimum: 1
                        type: integer
                    required:
                    - mode
                    type: object
                  bypass:
                    description: Bypass is a list of characteristics that will bypass
                      this rate limit.
                    items:
                      description: RateLimitKeyValue is a key-value pair used in bypass
                        rules.
                      properties:
                        name:
                          description: Name is the characteristic name.
                          type: string
                        value:
                          description: Value is the characteristic value.
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  correlate:
                    description: Correlate defines how requests are correlated for
                      rate limiting.
                    properties:
                      by:
                        description: By defines the correlation method.
                        enum:
                        - nat
                        - cf-connecting-ip
                        type: string
                    required:
                    - by
                    type: object
                  description:
                    description: Description is a human-readable description of the
                      rate limit.
                    type: string
                  disabled:
                    description: Disabled indicates if the rate limit is disabled.
                    type: boolean
                  id:
                    description: ID is the unique identifier of the rate limit.
                    type: string
                  match:
                    description: Match defines the traffic matching rules for this
                      rate limit.
                    properties:
                      request:
                        description: Request contains matching rules for requests.
                        properties:
                          methods:
                            description: Methods is a list of HTTP methods to match.
                            enum:
                            - GET
                            - POST
                            - PUT
                            - DELETE
                            - PATCH
                            - HEAD
                            - OPTIONS
                            items:
                              type: string
                            type: array
                          schemes:
                            description: Schemes is a list of schemes to match.
                            enum:
                            - HTTP
                            - HTTPS
                            items:
                              type: string
                            type: array
                          urlPattern:
                            description: URLPattern is a URL pattern to match.
                            type: string
                        type: object
                      response:
                        description: Response contains matching rules for responses.
                        properties:
                          headers:
                            description: Headers is a list of headers to match.
                            items:
                              description: |-
                                RateLimitResponseMatcherHeader contains the structure of the origin
                                HTTP headers used in request matcher checks.
                              properties:
                                name:
                                  description: Name is the header name.
                                  type: string
                                op:
                                  description: Op is the operation to perform.
                                  enum:
                                  - eq
                                  - ne
                                  - contains
                                  - startswith
                                  - endswith
                                  type: string
                                value:
                                  description: Value is the header value to compare
                                    against.
                                  type: string
                              required:
                              - name
                              - op
                              - value
                              type: object
                            type: array
                          originTraffic:
                            description: OriginTraffic indicates if origin traffic
                              should be considered.
                            type: boolean
                          statuses:
                            description: Statuses is a list of HTTP status codes to
                              match.
                            items:
                              type: integer
                            type: array
                        type: object
                    required:
                    - request
                    type: object
                  period:
                    description: Period is the time period in seconds during which
                      the threshold applies.
                    type: integer
                  threshold:
                    description: Threshold is the number of requests allowed within
                      the specified period.
                    type: integer
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
